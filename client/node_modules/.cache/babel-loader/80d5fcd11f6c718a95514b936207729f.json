{"ast":null,"code":"var _jsxFileName = \"/Users/yovanhirales/Desktop/Projects/wordApp/client/src/components/listwords.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, Fragment } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListWords = () => {\n  _s();\n\n  //use state to manage available entries\n  const [words, setWords] = useState([]);\n\n  const getWords = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/words'); //parse received data\n\n      const entry = await response.json();\n      setWords(entry);\n    } catch (err) {\n      console.error(err.message);\n    }\n  }; //return all words in table\n\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"table-dark\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Word\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Definition\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 3\n  }, this);\n};\n\n_s(ListWords, \"1ZJhU64pVeNwwL/6UGtfvs/W4TE=\");\n\n_c = ListWords;\nexport default ListWords;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListWords\");","map":{"version":3,"sources":["/Users/yovanhirales/Desktop/Projects/wordApp/client/src/components/listwords.js"],"names":["React","useState","useEffect","Fragment","ListWords","words","setWords","getWords","response","fetch","entry","json","err","console","error","message"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACvB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMM,QAAQ,GAAG,YAAY;AAC5B,QAAI;AACH,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAAD,CAA5B,CADG,CAGH;;AACA,YAAMC,KAAK,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAApB;AAEAL,MAAAA,QAAQ,CAACI,KAAD,CAAR;AACA,KAPD,CAOE,OAAOE,GAAP,EAAY;AACbC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAG,CAACG,OAAlB;AACA;AACD,GAXD,CAJuB,CAiBvB;;;AACA,sBACC,QAAC,QAAD;AAAA,2BACC;AAAO,MAAA,SAAS,EAAC,0BAAjB;AAAA,8BACC;AAAO,QAAA,SAAS,EAAC,YAAjB;AAAA,+BACC;AAAA,kCACC;AAAA;AAAA;AAAA;AAAA,kBADD,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFD,eAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cADD,eAQC;AAAA;AAAA;AAAA;AAAA,cARD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAoBA,CAtCD;;GAAMX,S;;KAAAA,S;AAwCN,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\n\nconst ListWords = () => {\n\t//use state to manage available entries\n\tconst [words, setWords] = useState([]);\n\n\tconst getWords = async () => {\n\t\ttry {\n\t\t\tconst response = await fetch('http://localhost:5000/words');\n\n\t\t\t//parse received data\n\t\t\tconst entry = await response.json();\n\n\t\t\tsetWords(entry);\n\t\t} catch (err) {\n\t\t\tconsole.error(err.message);\n\t\t}\n\t};\n\n\t//return all words in table\n\treturn (\n\t\t<Fragment>\n\t\t\t<table className='table table-striped mt-3'>\n\t\t\t\t<thead className='table-dark'>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th></th>\n\t\t\t\t\t\t<th>Word</th>\n\t\t\t\t\t\t<th>Definition</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t{/* <tr>\n\t\t\t\t\t\t<td>John</td>\n\t\t\t\t\t\t<td>Doe</td>\n\t\t\t\t\t\t<td>john@example.com</td>\n\t\t\t\t\t</tr> */}\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</Fragment>\n\t);\n};\n\nexport default ListWords;\n"]},"metadata":{},"sourceType":"module"}