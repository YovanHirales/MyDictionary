{"ast":null,"code":"var _jsxFileName = \"/Users/yovanhirales/Desktop/Projects/MyDictionary/client/src/components/listwords.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, Fragment } from 'react';\nimport EditDef from './EditDef';\nimport InputWords from './input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListWords = () => {\n  _s();\n\n  //use state to manage available entries\n  const [words, setWords] = useState([]);\n\n  const getWords = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/words'); //parse received data\n\n      const wordAndDef = await response.json(); //set state of words to contain all entries in an array\n\n      setWords(wordAndDef);\n\n      if (wordAndDef.length !== 0) {\n        document.getElementById('deleteAll').style.display = 'block';\n      } else {\n        document.getElementById('deleteAll').style.display = 'none';\n      }\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const onDelete = async id => {\n    try {\n      if (id) {\n        const deletedWord = await fetch(`http://localhost:5000/words/${id}`, {\n          method: 'DELETE'\n        });\n      } else {\n        const deletedWord = await fetch(`http://localhost:5000/words/`, {\n          method: 'DELETE'\n        });\n        document.getElementById('deleteAll').style.display = 'none';\n      }\n\n      getWords();\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  useEffect(() => {\n    getWords();\n  }, []); //return all words in table\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(InputWords, {\n      getWords: getWords\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-wrapper-scroll-y my-custom-scrollbar mt-3\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-striped\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"table-dark\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Word\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Definition\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                id: \"deleteAll\",\n                className: \"btn btn-danger\",\n                onClick: () => onDelete(),\n                children: \"Delete All\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: words.slice(0).reverse().map(entry => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: entry.word\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: entry.definition\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(EditDef, {\n                  entry: entry,\n                  getWords: getWords\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 12\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-danger mt-1\",\n                  onClick: () => onDelete(entry.word_id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 12\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 11\n              }, this)]\n            }, entry.word_id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 10\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"mb-5\",\n      children: \"Made with Merriam Webster's dictionary API\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 3\n  }, this);\n};\n\n_s(ListWords, \"QrHlQthZFfwcsWWYyDJIvsds8f8=\");\n\n_c = ListWords;\nexport default ListWords;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListWords\");","map":{"version":3,"sources":["/Users/yovanhirales/Desktop/Projects/MyDictionary/client/src/components/listwords.js"],"names":["React","useState","useEffect","Fragment","EditDef","InputWords","ListWords","words","setWords","getWords","response","fetch","wordAndDef","json","length","document","getElementById","style","display","err","console","error","message","onDelete","id","deletedWord","method","slice","reverse","map","entry","word","definition","word_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,UAAP,MAAuB,SAAvB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACvB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMQ,QAAQ,GAAG,YAAY;AAC5B,QAAI;AACH,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAAD,CAA5B,CADG,CAGH;;AACA,YAAMC,UAAU,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAzB,CAJG,CAMH;;AACAL,MAAAA,QAAQ,CAACI,UAAD,CAAR;;AAEA,UAAIA,UAAU,CAACE,MAAX,KAAsB,CAA1B,EAA6B;AAC5BC,QAAAA,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCC,KAArC,CAA2CC,OAA3C,GAAqD,OAArD;AACA,OAFD,MAEO;AACNH,QAAAA,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCC,KAArC,CAA2CC,OAA3C,GAAqD,MAArD;AACA;AACD,KAdD,CAcE,OAAOC,GAAP,EAAY;AACbC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAG,CAACG,OAAlB;AACA;AACD,GAlBD;;AAoBA,QAAMC,QAAQ,GAAG,MAAOC,EAAP,IAAc;AAC9B,QAAI;AACH,UAAIA,EAAJ,EAAQ;AACP,cAAMC,WAAW,GAAG,MAAMd,KAAK,CAAE,+BAA8Ba,EAAG,EAAnC,EAAsC;AACpEE,UAAAA,MAAM,EAAE;AAD4D,SAAtC,CAA/B;AAGA,OAJD,MAIO;AACN,cAAMD,WAAW,GAAG,MAAMd,KAAK,CAAE,8BAAF,EAAiC;AAC/De,UAAAA,MAAM,EAAE;AADuD,SAAjC,CAA/B;AAIAX,QAAAA,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCC,KAArC,CAA2CC,OAA3C,GAAqD,MAArD;AACA;;AAEDT,MAAAA,QAAQ;AACR,KAdD,CAcE,OAAOU,GAAP,EAAY;AACbC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAG,CAACG,OAAlB;AACA;AACD,GAlBD;;AAoBApB,EAAAA,SAAS,CAAC,MAAM;AACfO,IAAAA,QAAQ;AACR,GAFQ,EAEN,EAFM,CAAT,CA5CuB,CAgDvB;;AACA,sBACC,QAAC,QAAD;AAAA,4BACC,QAAC,UAAD;AAAY,MAAA,QAAQ,EAAEA;AAAtB;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAK,MAAA,SAAS,EAAC,iDAAf;AAAA,6BACC;AAAO,QAAA,SAAS,EAAC,qBAAjB;AAAA,gCACC;AAAO,UAAA,SAAS,EAAC,YAAjB;AAAA,iCACC;AAAA,oCACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFD,eAGC;AAAA;AAAA;AAAA;AAAA,oBAHD,eAIC;AAAA,qCACC;AACC,gBAAA,EAAE,EAAC,WADJ;AAEC,gBAAA,SAAS,EAAC,gBAFX;AAGC,gBAAA,OAAO,EAAE,MAAMc,QAAQ,EAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,oBAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,gBADD,eAiBC;AAAA,oBAMEhB,KAAK,CACJoB,KADD,CACO,CADP,EAECC,OAFD,GAGCC,GAHD,CAGMC,KAAD,IAAW;AACf,gCACC;AAAA,sCACC;AAAA,0BAAKA,KAAK,CAACC;AAAX;AAAA;AAAA;AAAA;AAAA,sBADD,eAEC;AAAA,0BAAKD,KAAK,CAACE;AAAX;AAAA;AAAA;AAAA;AAAA,sBAFD,eAGC;AAAA;AAAA;AAAA;AAAA,sBAHD,eAIC;AAAA,wCACC,QAAC,OAAD;AAAS,kBAAA,KAAK,EAAEF,KAAhB;AAAuB,kBAAA,QAAQ,EAAErB;AAAjC;AAAA;AAAA;AAAA;AAAA,wBADD,eAEC;AACC,kBAAA,SAAS,EAAC,qBADX;AAEC,kBAAA,OAAO,EAAE,MAAMc,QAAQ,CAACO,KAAK,CAACG,OAAP,CAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJD;AAAA,eAASH,KAAK,CAACG,OAAf;AAAA;AAAA;AAAA;AAAA,oBADD;AAgBA,WApBD;AANF;AAAA;AAAA;AAAA;AAAA,gBAjBD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YAFD,eAkDC;AAAA;AAAA;AAAA;AAAA,YAlDD,eAmDC;AAAQ,MAAA,SAAS,EAAC,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAnDD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAyDA,CA1GD;;GAAM3B,S;;KAAAA,S;AA4GN,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\nimport EditDef from './EditDef';\nimport InputWords from './input';\n\nconst ListWords = () => {\n\t//use state to manage available entries\n\tconst [words, setWords] = useState([]);\n\n\tconst getWords = async () => {\n\t\ttry {\n\t\t\tconst response = await fetch('http://localhost:5000/words');\n\n\t\t\t//parse received data\n\t\t\tconst wordAndDef = await response.json();\n\n\t\t\t//set state of words to contain all entries in an array\n\t\t\tsetWords(wordAndDef);\n\n\t\t\tif (wordAndDef.length !== 0) {\n\t\t\t\tdocument.getElementById('deleteAll').style.display = 'block';\n\t\t\t} else {\n\t\t\t\tdocument.getElementById('deleteAll').style.display = 'none';\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.error(err.message);\n\t\t}\n\t};\n\n\tconst onDelete = async (id) => {\n\t\ttry {\n\t\t\tif (id) {\n\t\t\t\tconst deletedWord = await fetch(`http://localhost:5000/words/${id}`, {\n\t\t\t\t\tmethod: 'DELETE',\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tconst deletedWord = await fetch(`http://localhost:5000/words/`, {\n\t\t\t\t\tmethod: 'DELETE',\n\t\t\t\t});\n\n\t\t\t\tdocument.getElementById('deleteAll').style.display = 'none';\n\t\t\t}\n\n\t\t\tgetWords();\n\t\t} catch (err) {\n\t\t\tconsole.error(err.message);\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tgetWords();\n\t}, []);\n\n\t//return all words in table\n\treturn (\n\t\t<Fragment>\n\t\t\t<InputWords getWords={getWords} />\n\t\t\t<div className='table-wrapper-scroll-y my-custom-scrollbar mt-3'>\n\t\t\t\t<table className='table table-striped'>\n\t\t\t\t\t<thead className='table-dark'>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th>Word</th>\n\t\t\t\t\t\t\t<th>Definition</th>\n\t\t\t\t\t\t\t<th></th>\n\t\t\t\t\t\t\t<th>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tid='deleteAll'\n\t\t\t\t\t\t\t\t\tclassName='btn btn-danger'\n\t\t\t\t\t\t\t\t\tonClick={() => onDelete()}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tDelete All\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t{/* <tr>\n\t\t\t\t\t\t<td>John</td>\n\t\t\t\t\t\t<td>Doe</td>\n\t\t\t\t\t\t<td>john@example.com</td>\n\t\t\t\t\t</tr> */}\n\t\t\t\t\t\t{words\n\t\t\t\t\t\t\t.slice(0)\n\t\t\t\t\t\t\t.reverse()\n\t\t\t\t\t\t\t.map((entry) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<tr key={entry.word_id}>\n\t\t\t\t\t\t\t\t\t\t<td>{entry.word}</td>\n\t\t\t\t\t\t\t\t\t\t<td>{entry.definition}</td>\n\t\t\t\t\t\t\t\t\t\t<td></td>\n\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t<EditDef entry={entry} getWords={getWords} />\n\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='btn btn-danger mt-1'\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => onDelete(entry.word_id)}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t\t<br />\n\t\t\t<footer className='mb-5'>\n\t\t\t\tMade with Merriam Webster's dictionary API\n\t\t\t</footer>\n\t\t</Fragment>\n\t);\n};\n\nexport default ListWords;\n"]},"metadata":{},"sourceType":"module"}