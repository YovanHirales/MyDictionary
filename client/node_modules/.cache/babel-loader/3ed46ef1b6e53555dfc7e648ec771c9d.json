{"ast":null,"code":"import _asyncToGenerator from\"/Users/yovanhirales/Desktop/Projects/MyDictionary/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/yovanhirales/Desktop/Projects/MyDictionary/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/yovanhirales/Desktop/Projects/MyDictionary/client/node_modules/@babel/runtime/regenerator/index.js\";import React,{useState,useEffect,Fragment}from'react';import EditDef from'./EditDef';import InputWords from'./input';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ListWords=function ListWords(){//use state to manage available entries\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),words=_useState2[0],setWords=_useState2[1];var getWords=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,wordAndDef;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fetch('/words');case 3:response=_context.sent;_context.next=6;return response.json();case 6:wordAndDef=_context.sent;//set state of words to contain all entries in an array\nsetWords(wordAndDef);if(wordAndDef.length!==0){document.getElementById('deleteAll').style.display='block';}else{document.getElementById('deleteAll').style.display='none';}_context.next=14;break;case 11:_context.prev=11;_context.t0=_context[\"catch\"](0);console.error(_context.t0.message);case 14:case\"end\":return _context.stop();}}},_callee,null,[[0,11]]);}));return function getWords(){return _ref.apply(this,arguments);};}();var onDelete=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(id){var deletedWord,_deletedWord;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;if(!id){_context2.next=7;break;}_context2.next=4;return fetch(\"/words/\".concat(id),{method:'DELETE'});case 4:deletedWord=_context2.sent;_context2.next=11;break;case 7:_context2.next=9;return fetch(\"/words/\",{method:'DELETE'});case 9:_deletedWord=_context2.sent;document.getElementById('deleteAll').style.display='none';case 11:getWords();_context2.next=17;break;case 14:_context2.prev=14;_context2.t0=_context2[\"catch\"](0);console.error(_context2.t0.message);case 17:case\"end\":return _context2.stop();}}},_callee2,null,[[0,14]]);}));return function onDelete(_x){return _ref2.apply(this,arguments);};}();useEffect(function(){getWords();},[]);//return all words in table\nreturn/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(InputWords,{getWords:getWords}),/*#__PURE__*/_jsx(\"div\",{className:\"table-wrapper-scroll-y my-custom-scrollbar mt-3\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"table table-striped\",children:[/*#__PURE__*/_jsx(\"thead\",{className:\"table-dark\",children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Word\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Definition\"}),/*#__PURE__*/_jsx(\"th\",{}),/*#__PURE__*/_jsx(\"th\",{children:/*#__PURE__*/_jsx(\"button\",{id:\"deleteAll\",className:\"btn btn-danger\",onClick:function onClick(){return onDelete();},children:\"Delete All\"})})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:words.slice(0).reverse().map(function(entry){return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:entry.word}),/*#__PURE__*/_jsx(\"td\",{children:entry.definition}),/*#__PURE__*/_jsx(\"td\",{}),/*#__PURE__*/_jsxs(\"td\",{children:[/*#__PURE__*/_jsx(EditDef,{entry:entry,getWords:getWords}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-danger mt-1\",onClick:function onClick(){return onDelete(entry.word_id);},children:\"Delete\"})]})]},entry.word_id);})})]})}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"footer\",{className:\"mb-5\",children:\"Made with Merriam Webster's dictionary API\"})]});};export default ListWords;","map":{"version":3,"sources":["/Users/yovanhirales/Desktop/Projects/MyDictionary/client/src/components/listwords.js"],"names":["React","useState","useEffect","Fragment","EditDef","InputWords","ListWords","words","setWords","getWords","fetch","response","json","wordAndDef","length","document","getElementById","style","display","console","error","message","onDelete","id","method","deletedWord","slice","reverse","map","entry","word","definition","word_id"],"mappings":"6aAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,CAAqCC,QAArC,KAAqD,OAArD,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,MAAOC,CAAAA,UAAP,KAAuB,SAAvB,C,wFAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACvB;AACA,cAA0BL,QAAQ,CAAC,EAAD,CAAlC,wCAAOM,KAAP,eAAcC,QAAd,eAEA,GAAMC,CAAAA,QAAQ,0FAAG,iMAEQC,CAAAA,KAAK,CAAC,QAAD,CAFb,QAETC,QAFS,qCAKUA,CAAAA,QAAQ,CAACC,IAAT,EALV,QAKTC,UALS,eAOf;AACAL,QAAQ,CAACK,UAAD,CAAR,CAEA,GAAIA,UAAU,CAACC,MAAX,GAAsB,CAA1B,CAA6B,CAC5BC,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCC,KAArC,CAA2CC,OAA3C,CAAqD,OAArD,CACA,CAFD,IAEO,CACNH,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCC,KAArC,CAA2CC,OAA3C,CAAqD,MAArD,CACA,CAdc,iFAgBfC,OAAO,CAACC,KAAR,CAAc,YAAIC,OAAlB,EAhBe,qEAAH,kBAARZ,CAAAA,QAAQ,0CAAd,CAoBA,GAAMa,CAAAA,QAAQ,2FAAG,kBAAOC,EAAP,wKAEXA,EAFW,iDAGYb,CAAAA,KAAK,kBAAWa,EAAX,EAAiB,CAC/CC,MAAM,CAAE,QADuC,CAAjB,CAHjB,QAGRC,WAHQ,sEAOYf,CAAAA,KAAK,WAAY,CAC1Cc,MAAM,CAAE,QADkC,CAAZ,CAPjB,QAORC,YAPQ,gBAWdV,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCC,KAArC,CAA2CC,OAA3C,CAAqD,MAArD,CAXc,QAcfT,QAAQ,GAdO,qFAgBfU,OAAO,CAACC,KAAR,CAAc,aAAIC,OAAlB,EAhBe,uEAAH,kBAARC,CAAAA,QAAQ,6CAAd,CAoBApB,SAAS,CAAC,UAAM,CACfO,QAAQ,GACR,CAFQ,CAEN,EAFM,CAAT,CAIA;AACA,mBACC,MAAC,QAAD,yBACC,KAAC,UAAD,EAAY,QAAQ,CAAEA,QAAtB,EADD,cAEC,YAAK,SAAS,CAAC,iDAAf,uBACC,eAAO,SAAS,CAAC,qBAAjB,wBACC,cAAO,SAAS,CAAC,YAAjB,uBACC,mCACC,4BADD,cAEC,kCAFD,cAGC,aAHD,cAIC,iCACC,eACC,EAAE,CAAC,WADJ,CAEC,SAAS,CAAC,gBAFX,CAGC,OAAO,CAAE,yBAAMa,CAAAA,QAAQ,EAAd,EAHV,wBADD,EAJD,GADD,EADD,cAiBC,uBAMEf,KAAK,CACJmB,KADD,CACO,CADP,EAECC,OAFD,GAGCC,GAHD,CAGK,SAACC,KAAD,CAAW,CACf,mBACC,mCACC,oBAAKA,KAAK,CAACC,IAAX,EADD,cAEC,oBAAKD,KAAK,CAACE,UAAX,EAFD,cAGC,aAHD,cAIC,mCACC,KAAC,OAAD,EAAS,KAAK,CAAEF,KAAhB,CAAuB,QAAQ,CAAEpB,QAAjC,EADD,cAEC,eACC,SAAS,CAAC,qBADX,CAEC,OAAO,CAAE,yBAAMa,CAAAA,QAAQ,CAACO,KAAK,CAACG,OAAP,CAAd,EAFV,oBAFD,GAJD,GAASH,KAAK,CAACG,OAAf,CADD,CAgBA,CApBD,CANF,EAjBD,GADD,EAFD,cAkDC,aAlDD,cAmDC,eAAQ,SAAS,CAAC,MAAlB,wDAnDD,GADD,CAyDA,CA1GD,CA4GA,cAAe1B,CAAAA,SAAf","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\nimport EditDef from './EditDef';\nimport InputWords from './input';\n\nconst ListWords = () => {\n\t//use state to manage available entries\n\tconst [words, setWords] = useState([]);\n\n\tconst getWords = async () => {\n\t\ttry {\n\t\t\tconst response = await fetch('/words');\n\n\t\t\t//parse received data\n\t\t\tconst wordAndDef = await response.json();\n\n\t\t\t//set state of words to contain all entries in an array\n\t\t\tsetWords(wordAndDef);\n\n\t\t\tif (wordAndDef.length !== 0) {\n\t\t\t\tdocument.getElementById('deleteAll').style.display = 'block';\n\t\t\t} else {\n\t\t\t\tdocument.getElementById('deleteAll').style.display = 'none';\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.error(err.message);\n\t\t}\n\t};\n\n\tconst onDelete = async (id) => {\n\t\ttry {\n\t\t\tif (id) {\n\t\t\t\tconst deletedWord = await fetch(`/words/${id}`, {\n\t\t\t\t\tmethod: 'DELETE',\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tconst deletedWord = await fetch(`/words/`, {\n\t\t\t\t\tmethod: 'DELETE',\n\t\t\t\t});\n\n\t\t\t\tdocument.getElementById('deleteAll').style.display = 'none';\n\t\t\t}\n\n\t\t\tgetWords();\n\t\t} catch (err) {\n\t\t\tconsole.error(err.message);\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tgetWords();\n\t}, []);\n\n\t//return all words in table\n\treturn (\n\t\t<Fragment>\n\t\t\t<InputWords getWords={getWords} />\n\t\t\t<div className='table-wrapper-scroll-y my-custom-scrollbar mt-3'>\n\t\t\t\t<table className='table table-striped'>\n\t\t\t\t\t<thead className='table-dark'>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th>Word</th>\n\t\t\t\t\t\t\t<th>Definition</th>\n\t\t\t\t\t\t\t<th></th>\n\t\t\t\t\t\t\t<th>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tid='deleteAll'\n\t\t\t\t\t\t\t\t\tclassName='btn btn-danger'\n\t\t\t\t\t\t\t\t\tonClick={() => onDelete()}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tDelete All\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t{/* <tr>\n\t\t\t\t\t\t<td>John</td>\n\t\t\t\t\t\t<td>Doe</td>\n\t\t\t\t\t\t<td>john@example.com</td>\n\t\t\t\t\t</tr> */}\n\t\t\t\t\t\t{words\n\t\t\t\t\t\t\t.slice(0)\n\t\t\t\t\t\t\t.reverse()\n\t\t\t\t\t\t\t.map((entry) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<tr key={entry.word_id}>\n\t\t\t\t\t\t\t\t\t\t<td>{entry.word}</td>\n\t\t\t\t\t\t\t\t\t\t<td>{entry.definition}</td>\n\t\t\t\t\t\t\t\t\t\t<td></td>\n\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t<EditDef entry={entry} getWords={getWords} />\n\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='btn btn-danger mt-1'\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => onDelete(entry.word_id)}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t\t<br />\n\t\t\t<footer className='mb-5'>\n\t\t\t\tMade with Merriam Webster's dictionary API\n\t\t\t</footer>\n\t\t</Fragment>\n\t);\n};\n\nexport default ListWords;\n"]},"metadata":{},"sourceType":"module"}