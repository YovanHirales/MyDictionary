[{"/Users/yovanhirales/Desktop/Projects/MyDictionary/client/src/index.js":"1","/Users/yovanhirales/Desktop/Projects/MyDictionary/client/src/App.js":"2","/Users/yovanhirales/Desktop/Projects/MyDictionary/client/src/components/listwords.js":"3","/Users/yovanhirales/Desktop/Projects/MyDictionary/client/src/components/input.js":"4","/Users/yovanhirales/Desktop/Projects/MyDictionary/client/src/components/EditDef.js":"5"},{"size":214,"mtime":1640908782251,"results":"6","hashOfConfig":"7"},{"size":230,"mtime":1639608718163,"results":"8","hashOfConfig":"7"},{"size":2470,"mtime":1642541131149,"results":"9","hashOfConfig":"7"},{"size":1115,"mtime":1641331535038,"results":"10","hashOfConfig":"7"},{"size":1822,"mtime":1641331504701,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1fgtgin",{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"/Users/yovanhirales/Desktop/Projects/MyDictionary/client/src/index.js",[],"/Users/yovanhirales/Desktop/Projects/MyDictionary/client/src/App.js",[],"/Users/yovanhirales/Desktop/Projects/MyDictionary/client/src/components/listwords.js",["24","25"],"/Users/yovanhirales/Desktop/Projects/MyDictionary/client/src/components/input.js",["26"],"import React, { Fragment, useState } from 'react';\n\nconst Input = (props) => {\n\tconst [word, setWord] = useState('');\n\n\tconst onSubmitForm = async (e) => {\n\t\te.preventDefault(); //prevent page refresh after submit\n\t\tconst wordArr = word.split(' ');\n\t\tfor (let i = 0; i < wordArr.length; i++) {\n\t\t\ttry {\n\t\t\t\tconst body = { word: wordArr[i] };\n\n\t\t\t\tif (body) {\n\t\t\t\t\tconst response = await fetch('/words', {\n\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\t\t\t\tbody: JSON.stringify(body),\n\t\t\t\t\t});\n\n\t\t\t\t\tsetWord('');\n\t\t\t\t\tprops.getWords();\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\tconsole.log('hello');\n\t\t\t}\n\t\t}\n\t};\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<h1 className='text-center mt-5'>My Dictionary</h1>\n\t\t\t<label>\n\t\t\t\tType in a word or multiple words separated by a space: ex// word1 word2\n\t\t\t\tword3\n\t\t\t</label>\n\t\t\t<form className='d-flex' onSubmit={onSubmitForm}>\n\t\t\t\t<input\n\t\t\t\t\ttype='text'\n\t\t\t\t\tclassName='form-control'\n\t\t\t\t\tvalue={word}\n\t\t\t\t\tonChange={(e) => setWord(e.target.value)}\n\t\t\t\t/>\n\t\t\t\t<button className='btn btn-success ml-1'>Add</button>\n\t\t\t</form>\n\t\t</Fragment>\n\t);\n};\n\nexport default Input;\n","/Users/yovanhirales/Desktop/Projects/MyDictionary/client/src/components/EditDef.js",["27","28"],"import React, { Fragment, useState, useEffect } from 'react';\n\nconst EditDef = (props) => {\n\tconst entry = props.entry;\n\tconst [def, setDef] = useState(entry.definition);\n\n\tconst update = async () => {\n\t\ttry {\n\t\t\tentry.definition = def;\n\n\t\t\tconst saveData = await fetch(`/words/${entry.word_id}`, {\n\t\t\t\tmethod: 'PUT',\n\t\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\t\tbody: JSON.stringify(entry),\n\t\t\t});\n\n\t\t\tprops.getWords();\n\t\t} catch (err) {\n\t\t\tconsole.error(err.message);\n\t\t}\n\t};\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<button\n\t\t\t\ttype='button'\n\t\t\t\tclassName='btn btn-primary'\n\t\t\t\tdata-toggle='modal'\n\t\t\t\tdata-target='#myModal'\n\t\t\t>\n\t\t\t\tEdit\n\t\t\t</button>\n\n\t\t\t<div className='modal' id='myModal'>\n\t\t\t\t<div className='modal-dialog'>\n\t\t\t\t\t<div className='modal-content'>\n\t\t\t\t\t\t<div className='modal-header'>\n\t\t\t\t\t\t\t<h4 className='modal-title'>Edit definition</h4>\n\t\t\t\t\t\t\t<button type='button' className='close' data-dismiss='modal'>\n\t\t\t\t\t\t\t\t&times;\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className='modal-body'>\n\t\t\t\t\t\t\t<form>\n\t\t\t\t\t\t\t\t<div className='form-group'>\n\t\t\t\t\t\t\t\t\t<label htmlFor='FormControlTextarea1'>{entry.word}:</label>\n\t\t\t\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\t\t\t\tclassName='form-control'\n\t\t\t\t\t\t\t\t\t\tid='FormControlTextarea1'\n\t\t\t\t\t\t\t\t\t\trows='3'\n\t\t\t\t\t\t\t\t\t\tvalue={def}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDef(e.target.value)}\n\t\t\t\t\t\t\t\t\t></textarea>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className='modal-footer'>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\t\t\tclassName='btn btn-success'\n\t\t\t\t\t\t\t\tdata-dismiss='modal'\n\t\t\t\t\t\t\t\tonClick={update}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tSave Changes\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\t\t\tclassName='btn btn-danger'\n\t\t\t\t\t\t\t\tdata-dismiss='modal'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tClose\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Fragment>\n\t);\n};\n\nexport default EditDef;\n",{"ruleId":"29","severity":1,"message":"30","line":32,"column":11,"nodeType":"31","messageId":"32","endLine":32,"endColumn":22},{"ruleId":"29","severity":1,"message":"30","line":36,"column":11,"nodeType":"31","messageId":"32","endLine":36,"endColumn":22},{"ruleId":"29","severity":1,"message":"33","line":14,"column":12,"nodeType":"31","messageId":"32","endLine":14,"endColumn":20},{"ruleId":"29","severity":1,"message":"34","line":1,"column":37,"nodeType":"31","messageId":"32","endLine":1,"endColumn":46},{"ruleId":"29","severity":1,"message":"35","line":11,"column":10,"nodeType":"31","messageId":"32","endLine":11,"endColumn":18},"no-unused-vars","'deletedWord' is assigned a value but never used.","Identifier","unusedVar","'response' is assigned a value but never used.","'useEffect' is defined but never used.","'saveData' is assigned a value but never used."]